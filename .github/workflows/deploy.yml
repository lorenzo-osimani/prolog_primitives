name: deploy
on:
  workflow_run:
    workflows:
      - check
    types:
      - completed
    branches:
      - master
      - main
      - develop
env:
  PROJECT_NAME: prolog_primitives
  WORKFLOW: deploy
jobs:
  deploy:
    concurrency:
      # Only one release job at a time. Strictly sequential.
      group: deploy
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    name: Release on PyPi and GitHub
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # all history

      - name: Get All Tags
        run: git fetch --tags -f

      - name: Get Python Version
        id: get-python-version
        run: echo "version::$(cat .python-version)" >> $GITHUB_OUTPUT

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ steps.get-python-version.outputs.version }}

      - name: Restore Python dependencies
        run: pip install -r requirements.txt

      - name: Generate .proto files
        shell: bash
        run: |
          mkdir prolog_primitives/generatedProto
          cd prolog_primitives/generatedProto
          python -m grpc_tools.protoc -I ../proto --python_out=. --pyi_out=. --grpc_python_out=. ../proto/*.proto
          if [ "$RUNNER_OS" == "macOS" ]; then
            sed -i '' 's/^\(import.*pb2\)/from . \1/g' *.py
          else
            sed -i 's/^\(import.*pb2\)/from . \1/g' *.py
          fi

      - name: Change default logging level
        run: sed -i -e 's/DEBUG/WARN/g' prolog_primitives/__init__.py

      - name: Pack
        run: python -m build

      - name: Get Node Version
        id: get-node-version
        run: echo "version::$(jq -r .engines.node package.json)" >> $GITHUB_OUTPUT

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ steps.get-node-version.outputs.version }}

      - name: Release
        run: |
          npm install
          npx semantic-release
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
